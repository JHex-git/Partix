#ifndef PARTICLE_COMMON_INCL
#define PARTICLE_COMMON_INCL
#include "random.incl"

struct Particle {
    bool alive;
    bool prevAlive;
    float lifetime;
    vec3 position;
    vec3 velocity;
    float size;
    vec3 color;
    uvec4 seed;
};

/*
    This random number generator is copied from UE5
*/
uvec4 RandomUInt4(inout Particle particle)
{
	++particle.seed.x;
	particle.seed.w = particle.seed.x ^ particle.seed.y;
	return Rand4DPCG32(particle.seed);
}
uint   RandomUInt(inout Particle particle) { return RandomUInt4(particle).x; }
uvec2  RandomUInt2(inout Particle particle) { return RandomUInt4(particle).xy; }
uvec3  RandomUInt3(inout Particle particle) { return RandomUInt4(particle).xyz; }

vec4 RandomFloat4(inout Particle particle)
{
	uvec4 v = RandomUInt4(particle);
	return vec4((v >> 8) & 0x00ffffff) / 16777216.0; // 0x01000000 == 16777216
}
float  RandomFloat(inout Particle particle)  { return RandomFloat4(particle).x; }
vec2 RandomFloat2(inout Particle particle) { return RandomFloat4(particle).xy; }
vec3 RandomFloat3(inout Particle particle) { return RandomFloat4(particle).xyz; }

#endif // PARTICLE_COMMON_INCL